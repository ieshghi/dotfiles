" This is my vimrc, which I have patched together mainly by stealing chunks
" out of many other vimrcs. Notable ones being those from mynameisfiber, dfm
" and criostoirbreathnach (github handles). I also made good use of what I
" learned from learnvimscriptthehardway.com, in particular the cat greeting :)
"
" Kilian Walsh, November 2012

" ----------------------------
" First off, the main settings
" ----------------------------

" cat greeting:
echo ">^.^<___(mao!)"

" Vundle and bundles configuration
so ~/.vim/bundles.vim

set hidden
set nocompatible		" Use Vim settings.
set title
set backspace=indent,eol,start  " Allow backspacing over everything in insert
				" mode.
set autoindent
set smartindent
set expandtab
set linebreak
set wrap
set colorcolumn=79
set ww=<,>,[,],h,l	        " Allow navigations beyond EOL

colorscheme Tomorrow

" Searching dfm-style
set ignorecase			" Default to using case insensitive searches,
set smartcase			" unless uppercase letters are used in the
                                " regex.
set hlsearch			" Highlight searches by default.
set incsearch			" Incrementally search while typing a /regex

" Then to unhighlight the search
nnoremap /<cr> :nohlsearch<cr>

if has("vms")
  set nobackup			" Do not keep a backup file, use versions
else				" instead.
  set backup			" Keep a backup file
endif

set history=50			" Keep 50 lines of command line history
set ruler			" Show the cursor position all the time
set showcmd			" Display incomplete commands

" This section turns on line-numbering that is toggled with F2
set numberwidth=3
highlight LineNr ctermbg=lightblue
map <F2> :set invnumber<cr>

" Here's for rainbow parentheses (default on)
au VimEnter * RainbowParenthesesToggle

" Enable mouse-clicking
if has('mouse')
  set mouse=a
endif

" This part works when compiled with support for autocommands. From original
" vimrc recommended settings.
syntax on
filetype on			" Enable file type detection.
filetype plugin indent on	" Language-dependent indenting.

" Put these in an autocmd group, so that we can delete them easily.
augroup vimrcEx
au!

" For all text files set 'textwidth' to 78 characters.
autocmd FileType text setlocal textwidth=78

" When editing a file, always jump to the last known cursor position.
autocmd BufReadPost *
  \ if line("'\"") > 1 && line("'\"") <= line("$") |
  \   exe "normal! g`\"" |
  \ endif

augroup END

" Clean up whitespace at the ends of lines before writing
autocmd BufWritePre * :%s/\s\+$//e
autocmd BufNewFile,BufRead *.less set filetype=css

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made. Only define it when not
" defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif


" Remaps
" ------

let mapleader = ","
inoremap jj <ESC>

" Dan's handy tricks

" Train my muscles to forget arrow keys!
noremap <Left>  <nop>
noremap <Right> <nop>
noremap <Up>    <nop>
noremap <Down>  <nop>

" Move a line up/down in a file
nnoremap - ddp
nnoremap _ ddkkp

" Window resizing
noremap <C-h> <C-w>>
noremap <C-j> <C-W>-
noremap <C-k> <C-W>+
noremap <C-l> <C-w><

" Yank, comment, paste.
nmap <leader>y Y\\\P
vmap <leader>y ygv\\P



" ------------------------
" Now, more specific stuff
" ------------------------

" Source some special settings for python and C to comply with PEP 8
so ~/.vim/pythonvimrc

" Make short tabs for html format
au BufRead,BufNewFile *html set shiftwidth=2

" Start up Slime for lisp files
let g:slimv_swank_cmd = '! xterm -e sbcl --load ~/Repositories/slime/start-swank.lisp &'
" get rainbow parens for lisp
let g:lisp_rainbow=1


" NERDTree settings
" -----------------

autocmd vimenter * NERDTree
autocmd vimenter * if !argc() | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
let g:NERDTreeDirArrows=0
map <C-n> :NERDTreeToggle<CR>


" Screen stuff
" ------------

let g:ScreenImpl = 'Tmux'
map <F4> :ScreenShellVertical<Enter>
map <F8> :ScreenSend<Enter>


" Vim-latex stuff
" ---------------

" Some of these are from http://vim-latex.sourceforge.net/documentation/
" latex-suite/recommended-settings.html

" IMPORTANT: grep will sometimes skip displaying the file name if you search
" in a singe file. This will confuse Latex-Suite. Set your grep program to
" always generate a file-name.
set grepprg=grep\ -nH\ $*

" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'
let g:Tex_DefaultTargetFormat = 'pdf'
let g:Tex_CompileRule_pdf = 'latexmk -pdflatex="pdflatex -shell-escape % %S" -pdf $*'


" Sparkup stuff
" -------------

let g:sparkup="~/.vim/bundle/vim-sparkup/ftplugin/sparkup.vim"
" (Default: 'sparkup')
" Location of the sparkup executable. You shouldn't need to change this
" setting if you used the install option above.
let g:sparkupArgs
" (Default: '--no-last-newline')
" Additional args passed to sparkup.
let g:sparkupExecuteMapping
" (Default: '<c-e>')
" Mapping used to execute sparkup.
let g:sparkupNextMapping
" (Default: '<c-n>')
" Mapping used to jump to the next empty tag/attribute.
