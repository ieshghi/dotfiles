# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt notify
unsetopt beep
bindkey -v
bindkey '^R' history-incremental-search-backward

# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/ieshghi/.zshrc'


autoload -Uz compinit
compinit
# End of lines added by compinstall

alias mtlb='~/Documents/.matlab/bin/matlab -nosplash -nodesktop'
alias mathe='env LD_PRELOAD="/usr/lib/libfreetype.so /usr/lib/libz.so" vblank_mode=0 /usr/local/Wolfram/Mathematica/11.3/Executables/Mathematica'
alias ll='ls -alt'
alias zwork='cd ~/Documents/work/zlab'
alias gwork='cd ~/Documents/code/dumbbell'
alias loadserv='sudo sshfs -p 4426 -o allow_other ie355@rio.physics.nyu.edu:/home/zlab/zidovskalab/Iraj/ ~/Documents/work/zlab/server/'
alias loadclust_dat='sshfs -p 8024 -o allow_other greene:"/scratch/ie355/zlab_data/corrl_data/" ~/Documents/work/zlab/sync_clustdat/'
alias loadplots='sshfs -p 8024 -o allow_other greene:"/home/ie355/plotdump/" ~/Documents/work/zlab/sync_plots/'
alias doi='okular /home/ieshghi/Documents/papers/biophys/doi_onuki_twofluid.pdf'
alias chydro='okular /home/ieshghi/Documents/papers/biophys/bruinsma2014.pdf'
alias hydrosupp='okular /home/ieshghi/Documents/papers/biophys/hydrodynamics\ supporting\ material.pdf'
alias cluster_old='ssh -X prince'
alias cluster='ssh -X greene'

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[ShiftTab]="${terminfo[kcbt]}"

# setup key accordingly
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"      beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"       end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"    overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}" backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"    delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"        up-line-or-history
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"      down-line-or-history
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"      backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"     forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"    beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"  end-of-buffer-or-history
[[ -n "${key[ShiftTab]}"  ]] && bindkey -- "${key[ShiftTab]}"  reverse-menu-complete

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
	autoload -Uz add-zle-hook-widget
	function zle_application_mode_start {
		echoti smkx
	}
	function zle_application_mode_stop {
		echoti rmkx
	}
	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi


autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

[[ -n "${key[Up]}"   ]] && bindkey -- "${key[Up]}"   up-line-or-beginning-search
[[ -n "${key[Down]}" ]] && bindkey -- "${key[Down]}" down-line-or-beginning-search


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/ieshghi/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/ieshghi/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/ieshghi/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/ieshghi/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

autoload -Uz promptinit
promptinit
prompt off

if [ ! -S ~/.ssh/ssh_auth_sock ]; then
  eval `ssh-agent`
  ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
fi
export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
ssh-add -l > /dev/null || ssh-add

# Open new terminal in same directory as last terminal:
function cd {
    builtin cd $@
    pwd > ~/.last_dir
}
if [ -f ~/.last_dir ]
    then cd `cat ~/.last_dir`
fi

export TERM='xterm-256color'


# include local bin in path
export PATH=$HOME/bin:$PATH

# after setting up pyenv and using pyenv's pip to install pipenv
export PIPENV_PYTHON="$PYENV_ROOT/shims/python"



